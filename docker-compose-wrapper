#!/bin/bash
set -e
#set -x
cd $(dirname $0)

if [[ -f .env ]]; then
  set -o allexport
  source .env
  set +o allexport
fi

export COMPOSE_PROJECT_MODE=${COMPOSE_PROJECT_MODE-default}
export COMPOSE_PROJECT_PHP_VERSION=${COMPOSE_PROJECT_PHP_VERSION-7.4}
export COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME-$(basename $(pwd))}
export COMPOSE_PROJECT_PORT_PREFIX=${COMPOSE_PROJECT_PORT_PREFIX-"301"}
export COMPOSE_PROJECT_PORT_HTTP=${COMPOSE_PROJECT_PORT_HTTP-"${COMPOSE_PROJECT_PORT_PREFIX}80"}
export COMPOSE_PROJECT_PORT_XHGUI=${COMPOSE_PROJECT_PORT_XHGUI-"${COMPOSE_PROJECT_PORT_PREFIX}81"}
export COMPOSE_PROJECT_PORT_MYSQL=${COMPOSE_PROJECT_PORT_MYSQL-"${COMPOSE_PROJECT_PORT_PREFIX}06"}
export COMPOSE_PROJECT_PORT_ELASTICSEARCH=${COMPOSE_PROJECT_PORT_ELASTICSEARCH-"${COMPOSE_PROJECT_PORT_PREFIX}92"}
export COMPOSE_PROJECT_PORT_MAIL_WEBGUI=${COMPOSE_PROJECT_PORT_MAIL_WEBGUI-"${COMPOSE_PROJECT_PORT_PREFIX}25"}
export COMPOSE_PROJECT_COMPOSER_AUTH=${COMPOSE_PROJECT_COMPOSER_AUTH-${COMPOSER_AUTH-""}}

DOCKER_COMPOSE_BIN="${DOCKER_COMPOSE_BIN-$(which docker-compose)}";
if [[ -f "docker-compose.yml" ]]; then
  DOCKER_COMPOSE_BIN="${DOCKER_COMPOSE_BIN} -f docker-compose.yml"
fi

if [[ "$COMPOSE_PROJECT_MODE" == "mutagen" ]]; then
  if [[ -f "docker-compose-mutagen.yml" ]]; then
      DOCKER_COMPOSE_BIN="${DOCKER_COMPOSE_BIN} -f docker-compose-mutagen.yml"
  fi
else
  if [[ "$OSTYPE" == "darwin"* ]] && ps aux | grep -v 'grep' | grep nfsd > /dev/null 2>&1; then
    if [[ -f "docker-compose-macos.yml" ]]; then
      DOCKER_COMPOSE_BIN="${DOCKER_COMPOSE_BIN} -f docker-compose-macos.yml"
    fi
  else
    if [[ -f "docker-compose-bind.yml" ]]; then
      DOCKER_COMPOSE_BIN="${DOCKER_COMPOSE_BIN} -f docker-compose-bind.yml"
    fi
  fi
fi

if [[ ! -d www ]]; then
  mkdir www
fi

if [[ $COMPOSE_PROJECT_MODE == "mutagen" ]] && [[ -f "docker-compose-mutagen.yml" ]]; then
  WAIT_SYNC="1"
  if docker volume ls | grep "^${COMPOSE_PROJECT_NAME}_appcode$" > /dev/null 2>&1; then
    if [[ $(docker volume inspect -f '{{ .Options.type }}' ${COMPOSE_PROJECT_NAME}_appcode) == "nfs" ]]; then
      docker volume rm ${COMPOSE_PROJECT_NAME}_appcode
    fi
  fi

  if [[ $1 == "down" ]]; then
    if mutagen sync list | grep -i "Name: ${COMPOSE_PROJECT_NAME}-appcode" > /dev/null 2>&1; then
      mutagen sync terminate "${COMPOSE_PROJECT_NAME}-appcode"
    fi
    WAIT_SYNC=""
  else
    if [[ "0" -eq $(${DOCKER_COMPOSE_BIN} ps -q mutagen  2> /dev/null | wc -l > /dev/null) ]]; then
      ${DOCKER_COMPOSE_BIN} up -d mutagen
    fi
    DOCKER_CONTAINER_NAME_MUTAGEN=$(docker inspect -f '{{.Name}}' $(${DOCKER_COMPOSE_BIN} ps -q mutagen) | cut -c2-)
    if ! mutagen sync list | grep -i "Name: ${COMPOSE_PROJECT_NAME}-appcode" > /dev/null 2>&1; then
      mutagen sync create --sync-mode=two-way-resolved --ignore-vcs --symlink-mode=ignore --name=${COMPOSE_PROJECT_NAME}-appcode $(pwd)/www docker://linuxbrew@${DOCKER_CONTAINER_NAME_MUTAGEN}/var/www
    else
      WAIT_SYNC=""
    fi

    if [[ $WAIT_SYNC == "1" ]]; then
      until mutagen sync list "${COMPOSE_PROJECT_NAME}-appcode" | grep 'Status:' | grep 'Watching for changes' > /dev/null 2>&1; do
        if which tput > /dev/null 2>&1; then
          tput cuu 1 && tput el
        fi
        mutagen sync list "${COMPOSE_PROJECT_NAME}-appcode" | grep 'Status:' | echo $(awk -F: '{ print $2 }')
        sleep 3
      done
    fi
  fi
fi

if [[ $1 == "up" ]]; then
  printf "\033[0;37m[${COMPOSE_PROJECT_NAME}] Application URL: http://localhost:${COMPOSE_PROJECT_PORT_HTTP}/\033[0m\n"
  printf "\033[0;37m[${COMPOSE_PROJECT_NAME}] XHGUI URL: http://localhost:${COMPOSE_PROJECT_PORT_XHGUI}/\033[0m\n"
  printf "\033[0;37m[${COMPOSE_PROJECT_NAME}] Mailhog URL: http://localhost:${COMPOSE_PROJECT_PORT_MAIL_WEBGUI}/\033[0m\n"
  printf "\033[0;37m[${COMPOSE_PROJECT_NAME}] Elasticsearch URL: http://localhost:${COMPOSE_PROJECT_PORT_ELASTICSEARCH}/\033[0m\n"
  printf "\033[0;37m[${COMPOSE_PROJECT_NAME}] Mysql address: 127.0.0.1:${COMPOSE_PROJECT_PORT_MYSQL}/\033[0m\n"
fi

exec ${DOCKER_COMPOSE_BIN} "$@"

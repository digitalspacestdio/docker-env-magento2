--- app/bootstrap.php	2022-03-09 19:14:09.000000000 +0400
+++ app/bootstrap.php	2022-03-09 19:15:02.000000000 +0400
@@ -50,6 +50,12 @@
     unset($_SERVER['ORIG_PATH_INFO']);
 }

+if (isset($_COOKIE['XDEBUG_PROFILE']) && $_COOKIE['XDEBUG_PROFILE']) {
+    if (is_file(__DIR__ . '/profiler.php')) {
+        require_once(__DIR__ . '/profiler.php');
+    }
+}
+
 if (
     (!empty($_SERVER['MAGE_PROFILER']) || file_exists(BP . '/var/profiler.flag'))
     && isset($_SERVER['HTTP_ACCEPT'])
--- app/profiler.php	2022-03-09 19:20:26.000000000 +0400
+++ app/profiler.php	2022-03-09 19:20:22.000000000 +0400
@@ -0,0 +1,98 @@
+<?php
+
+/**
+ * Bootstrap for php-profiler. Copy and customize this file,
+ * include this file inside some bootstrapper or other "early central point in execution"
+ *
+ * Documentation:
+ * - https://github.com/perftools/php-profiler#create-profiler
+ * - https://github.com/perftools/php-profiler#config
+ */
+
+use Xhgui\Profiler\Profiler;
+use Xhgui\Profiler\ProfilingFlags;
+
+try {
+    $config = array(
+        // If defined, use specific profiler
+        // otherwise use any profiler that's found
+        // 'profiler' => function_exists('tideways_xhprof_enable') ? Profiler::PROFILER_TIDEWAYS_XHPROF : Profiler::PROFILER_XHPROF,
+
+        // This allows to configure, what profiling data to capture
+        'profiler.flags' => array(
+            ProfilingFlags::CPU,
+            ProfilingFlags::MEMORY,
+            ProfilingFlags::NO_BUILTINS,
+            ProfilingFlags::NO_SPANS,
+        ),
+
+        // Saver to use.
+        // Please note that 'pdo' and 'mongo' savers are deprecated
+        // Prefer 'upload' or 'file' saver.
+        'save.handler' => Profiler::SAVER_MONGODB,
+
+        // https://github.com/perftools/php-profiler#mongodb-saver
+        'save.handler.mongodb' => array(
+            'dsn' => 'mongodb://'. getenv('XHGUI_MONGO_HOSTNAME') ?: '127.0.0.1' . ':' . getenv('XHGUI_MONGO_PORT') ?: '27017',
+            'database' => 'xhprof',
+            // Allows you to pass additional options like replicaSet to MongoClient.
+            // 'username', 'password' and 'db' (where the user is added)
+            'options' => array(),
+            // Allows you to pass driver options like ca_file to MongoClient
+            'driverOptions' => array(),
+        ),
+
+        // Environment variables to exclude from profiling data
+        'profiler.exclude-env' => array(),
+        'profiler.options' => array(),
+
+        /**
+         * Determine whether the profiler should run.
+         * This default implementation just disables the profiler.
+         * Override this with your custom logic in your config
+         * @return bool
+         */
+        'profiler.enable' => function () {
+            return true;
+        },
+
+        /**
+         * Creates a simplified URL given a standard URL.
+         * Does the following transformations:
+         *
+         * - Remove numeric values after "=" in query string.
+         *
+         * @param string $url
+         * @return string
+         */
+        'profiler.simple_url' => function ($url) {
+            return preg_replace('/=\d+/', '', $url);
+        },
+
+        /**
+         * Enable this to clean up the url before submitting it to XHGui.
+         * This way it is possible to remove sensitive data or discard any other data.
+         *
+         * The URL argument is the `REQUEST_URI` or `argv` value.
+         *
+         * @param string $url
+         * @return string
+         */
+        'profiler.replace_url' => function ($url) {
+            return str_replace('token', '', $url);
+        },
+    );
+
+    /**
+     * The constructor will throw an exception if the environment
+     * isn't fit for profiling (extensions missing, other problems)
+     */
+    $profiler = new Profiler($config);
+
+    // The profiler itself checks whether it should be enabled
+    // for request (executes lambda function from config)
+    $profiler->start();
+} catch (Exception $e) {
+    // throw away or log error about profiling instantiation failure
+    error_log($e->getMessage());
+}

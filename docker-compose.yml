version: '3.4'

services:
  fpm:
    image: "digitalspacestudio/php:${COMPOSE_PROJECT_PHP_VERSION-7.4}"
    user: root
    volumes:
      - 'appcode:/var/www'
      - 'session:/var/www/var/session'
      - 'npm:/home/linuxbrew/.npm'
      - 'composer:/home/linuxbrew/.composer'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/fpm/php-fpm.conf:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-7.4}/php-fpm.conf:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/fpm/php.ini:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-7.4}/php.ini:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/fpm/prepend.php:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-7.4}/prepend.php:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/fpm/msmtprc:/home/linuxbrew/.msmtprc:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/fpm/entrypoint.sh:/entrypoint.sh:ro'
    entrypoint: '/entrypoint.sh'
    working_dir: '/var/www'
    networks:
      - 'appnet'
    environment:
      - 'XHGUI_MONGO_HOSTNAME=mongodb'
      - 'XHGUI_MONGO_DATABASE=xhprof'
      - 'COMPOSER_AUTH=$COMPOSE_PROJECT_COMPOSER_AUTH'
    networks:
      - 'appnet'
    depends_on:
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      mail:
        condition: service_healthy
    restart: on-failure:3
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/9000"
      start_period: 60s
      interval: 5s

  cli:
    image: "digitalspacestudio/php:${COMPOSE_PROJECT_PHP_VERSION-7.4}"
    user: root
    volumes:
      - 'appcode:/var/www'
      - 'npm:/home/linuxbrew/.npm'
      - 'composer:/home/linuxbrew/.composer'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/cli/php.ini:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-7.4}/php.ini:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/cli/ext-xdebug.ini:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-7.4}/conf.d/ext-xdebug.ini:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/fpm/prepend.php:/home/linuxbrew/.linuxbrew/etc/php/${COMPOSE_PROJECT_PHP_VERSION-7.4}/prepend.php:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/fpm/msmtprc:/home/linuxbrew/.msmtprc:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/cli/entrypoint.sh:/entrypoint.sh:ro'
    entrypoint: '/entrypoint.sh'
    working_dir: '/var/www'
    environment:
      - 'XHGUI_MONGO_HOSTNAME=mongodb'
      - 'XHGUI_MONGO_DATABASE=xhprof'
      - 'COMPOSER_AUTH=$COMPOSE_PROJECT_COMPOSER_AUTH'
    networks:
      - 'appnet'
    depends_on:
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      mail:
        condition: service_healthy

  xhgui:
    image: "xhgui/xhgui:0.18.1"
    volumes:
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/xhgui/config:/var/www/xhgui/config'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/xhgui/nginx.conf:/etc/nginx/conf.d/default.conf:ro'
    environment:
      - XHGUI_MONGO_HOSTNAME=mongodb
      - XHGUI_MONGO_DATABASE=xhprof
    ports:
      - "${COMPOSE_PROJECT_PORT_XHGUI:-81}:80"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: nc -vz -w 1 localhost 80
      start_period: 30s
      interval: 5s

  mail:
    image: "mailhog/mailhog"
    ports:
      - "${COMPOSE_PROJECT_PORT_MAIL_WEBGUI:-8025}:8025"
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: "nc -vz -w 1 localhost 8025"
      start_period: 5s
      interval: 5s

  mongodb:
    image: percona/percona-server-mongodb:4.4
    # (case sensitive) engine: mmapv1, rocksdb, wiredTiger, inMemory
    command: --storageEngine=wiredTiger
    environment:
      - MONGO_INITDB_DATABASE=xhprof
    volumes:
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/mongo/initdb.d:/docker-entrypoint-initdb.d'
    ports:
      - "27017"
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: mongo --quiet --eval 'db.runCommand("ping").ok' xhgui
      start_period: 30s
      interval: 10s

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.6.2-magento2'
    build: "elasticsearch"
    volumes:
      - "elasticsearch-data:/usr/share/elasticsearch/data:delegated"
    environment:
      ES_JAVA_OPTS: '${ES_JAVA_OPTS:--Xms256m -Xmx2048m}'
      discovery.type: 'single-node'
    ports:
      - "${COMPOSE_PROJECT_PORT_ELASTICSEARCH:-9200}:9200"
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/9200"
      start_period: 15s
      interval: 5s
      retries: 5

  database:
    image: 'mysql:8'
    command: '--default-authentication-plugin=mysql_native_password'
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    environment:
      LANG: 'C.UTF-8'
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_USER: 'magento2'
      MYSQL_PASSWORD: 'magento2'
      MYSQL_DATABASE: 'magento2'
    volumes:
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/mysql/initdb.d:/docker-entrypoint-initdb.d:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/mysql/my.cnf:/etc/mysql/conf.d/magento2.cnf:ro'
      - 'mysql-data:/var/lib/mysql:delegated'
    ports:
      - '${COMPOSE_PROJECT_PORT_MYSQL:-3306}:3306'
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: "mysqladmin ping --silent -u$${MYSQL_USER} -p$${MYSQL_PASSWORD}"
      start_period: 60s
      interval: 5s
      retries: 5

  nginx:
    image: 'nginx'
    depends_on:
      fpm:
        condition: service_healthy
    ports:
      - '${COMPOSE_PROJECT_PORT_HTTP:-80}:80'
    volumes:
      - 'appcode:/var/www:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-./docker}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
    networks:
      - 'appnet'
    restart: on-failure:3
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/80"
      start_period: 30s
      interval: 5s

networks:
  appnet:

volumes:
  appcode:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${COMPOSE_PROJECT_APPDIR:-${PWD}/www}"
  npm:
    driver: local
  composer:
    driver: local
  session:
    driver: local
  elasticsearch-data:
    driver: local
  mysql-data:
    driver: local
